
[advanced firewall.list]
powershell "Get-NetFirewallRule -Description warband | % DisplayName"

[advanced firewall.create]
netsh advfirewall firewall add rule name={header}-{unique_id} dir=in action=allow protocol=udp localport={port} remoteip={ip_address} description=warband

[advanced firewall.delete]
netsh advfirewall firewall delete rule name={header}-{unique_id}

[google cloud.list]
gcloud compute --project={project} firewall-rules list --filter="name~'^{header}-.*$'"

[google cloud.create]
gcloud compute --project={project} firewall-rules create {header}-{unique_id} --direction=INGRESS --priority={priority}{network} --action=ALLOW --rules=udp:{port} --source-ranges={ip_addresses}

[google cloud.delete]
gcloud compute --project={project} firewall-rules delete {header}-{unique_id}

[hetzner.list]
https://api.hetzner.cloud/v1/firewalls

[hetzner.set]
https://api.hetzner.cloud/v1/firewalls/{firewall_id}/actions/set_rules

[cloudflare.ping]
GET /handlerservers.ashx?type=ping&keys&port={port}&hidden=false HTTP/1.1\r\n
Connection: Keep-Alive\r\n
User-Agent: Mount Blade HTTP\r\n
Host: {hostname}\r\n
\r\n

[cloudflare.confirm ping]
GET /handlerservers.ashx?type=confirmping&port={port}&rand={code}&hidden=false HTTP/1.1\r\n
Connection: Keep-Alive\r\n
User-Agent: Mount Blade HTTP\r\n
Host: {hostname}\r\n
\r\n

[dumpcap.command]
{application} -b filesize:{filesize} -b printname:{printname} -w {write} -i {interface} -f {filter}